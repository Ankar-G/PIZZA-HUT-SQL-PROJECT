-- the average number of pizzas ordered per day.
SELECT 
    ROUND(AVG(QUANTITY), 0) AS AVG_ORDER_PERDAY
FROM
    (SELECT 
        O.ORDER_DATE AS ORDER_PER_DAY, SUM(OD.QUANTITY) AS QUANTITY
    FROM
        ORDERS O
    JOIN ORDERS_DETAILS OD ON O.ORDER_ID = OD.ORDER_ID
    GROUP BY ORDER_PER_DAY) AS ORDER_QUNATITY; 




-- TOTAL REVENUE GENERATED FROM PIZZA SALES.
   SELECT ROUND(SUM(ORDERS_DETAILS.QUANTITY * PIZZAS.PRICE),
            2) AS TOTAL_SALES
FROM
    ORDERS_DETAILS
        JOIN
    PIZZAS ON ORDERS_DETAILS.PIZZA_ID = PIZZAS.PIZZA_ID;





-- the category-wise distribution of pizzas.
SELECT 
    PT.CATEGORY PIZZA_CATEGORY, COUNT(PT.NAME) AS NO_OF_PIZZAS
FROM
    PIZZA_TYPES PT
GROUP BY PIZZA_CATEGORY;






--  THE MOST COMMON PIZZA SIZE ORDERED
SELECT 
    P.SIZE, COUNT(OD.ORDER_DETAILS_ID) AS NO_OF_ORDER
FROM
    PIZZAS P
        JOIN
    ORDERS_DETAILS OD ON P.PIZZA_ID = OD.PIZZA_ID
GROUP BY P.SIZE
ORDER BY NO_OF_ORDER DESC;





-- the cumulative revenue generated over time. 
SELECT ORDER_DATE,
ROUND(SUM(REVENUE) OVER (ORDER BY ORDER_DATE),2) AS CUM_REVENUE
FROM
(SELECT O.ORDER_DATE,
SUM(OD.QUANTITY * P.PRICE) AS REVENUE
FROM ORDERS_DETAILS OD
JOIN PIZZAS P
ON OD.PIZZA_ID = P.PIZZA_ID
JOIN ORDERS O
ON O.ORDER_ID = OD.ORDER_ID
GROUP BY O.ORDER_DATE) AS SALES;





-- the distribution of orders by hour of the day.
SELECT 
    HOUR(O.ORDER_TIME) AS HOURS,
    COUNT(O.ORDER_ID) AS ORDERS_COUNT
FROM
    ORDERS O
GROUP BY HOURS;





--  THE HIGHEST PRICE PIZZA
SELECT 
    PT.NAME, P.PRICE
FROM
    PIZZA_TYPES PT
        JOIN
    PIZZAS P ON PT.PIZZA_TYPE_ID = P.PIZZA_TYPE_ID
ORDER BY P.PRICE DESC
LIMIT 1; 






-- percentage contribution of each pizza type to total revenue.
SELECT 
    PT.CATEGORY,
    ROUND((SUM(OD.QUANTITY * P.PRICE) / (SELECT 
            ROUND(SUM(OD.QUANTITY * P.PRICE), 2) AS TOTAL_SALES
        FROM
            ORDERS_DETAILS OD
                JOIN
            PIZZAS P ON OD.PIZZA_ID = P.PIZZA_ID)),2) * 100 AS REVENUE
FROM
    PIZZA_TYPES PT
        JOIN
    PIZZAS P ON PT.PIZZA_TYPE_ID = P.PIZZA_TYPE_ID
        JOIN
    ORDERS_DETAILS OD ON OD.PIZZA_ID = P.PIZZA_ID
GROUP BY PT.CATEGORY
ORDER BY REVENUE DESC;






-- top 3 most ordered pizza types based on revenue for each pizza category.
SELECT NAME, REVENUE FROM
(SELECT CATEGORY, NAME, REVENUE, 
RANK() OVER( PARTITION BY CATEGORY ORDER BY REVENUE DESC) AS RANKING
FROM
(SELECT PT.CATEGORY, PT.NAME, SUM(OD.QUANTITY * P.PRICE) AS REVENUE
FROM ORDERS_DETAILS OD
JOIN PIZZAS P
ON OD.PIZZA_ID = P.PIZZA_ID
JOIN PIZZA_TYPES PT
ON PT.PIZZA_TYPE_ID = P.PIZZA_TYPE_ID
GROUP BY PT.CATEGORY, PT.NAME) AS TABLE1) AS TABLE2
WHERE RANKING<= 3; 






-- top 3 most ordered pizza types based on revenue.
SELECT PT.NAME AS NAME, SUM(P.PRICE*OD.QUANTITY) AS REVENUE
FROM PIZZA_TYPES PT
JOIN PIZZAS P
ON PT.PIZZA_TYPE_ID = P.PIZZA_TYPE_ID
JOIN ORDERS_DETAILS OD
ON OD.PIZZA_ID = P.PIZZA_ID
GROUP BY NAME
ORDER BY REVENUE DESC
LIMIT 3;






-- the top 3 most ordered pizza types based on revenue for each pizza category.
SELECT NAME, REVENUE FROM
(SELECT CATEGORY, NAME, REVENUE, 
RANK() OVER( PARTITION BY CATEGORY ORDER BY REVENUE DESC) AS RANKING
FROM
(SELECT PT.CATEGORY, PT.NAME, SUM(OD.QUANTITY * P.PRICE) AS REVENUE
FROM ORDERS_DETAILS OD
JOIN PIZZAS P
ON OD.PIZZA_ID = P.PIZZA_ID
JOIN PIZZA_TYPES PT
ON PT.PIZZA_TYPE_ID = P.PIZZA_TYPE_ID
GROUP BY PT.CATEGORY, PT.NAME) AS TABLE1) AS TABLE2
WHERE RANKING<= 3; 






-- THE TOP 5 MOST ORDERED PIZZA TYPES ALONG WITH THEIR QUANTITIES
SELECT 
    PT.NAME, SUM(OD.QUANTITY) AS QUANTITY
FROM
    PIZZA_TYPES PT
        JOIN
    PIZZAS P ON PT.PIZZA_TYPE_ID = P.PIZZA_TYPE_ID
        JOIN
    ORDERS_DETAILS OD ON OD.PIZZA_ID = P.PIZZA_ID
GROUP BY PT.NAME
ORDER BY QUANTITY DESC
LIMIT 5;






-- THE TOTAL NUMBER OF ORDERS PLACED

SELECT 
    COUNT(ORDER_ID) AS TOTAL_ORDERS
FROM
    ORDERS;






-- the total quantity of each pizza category ordered.
SELECT 
    PT.CATEGORY, SUM(OD.QUANTITY) AS TOTAL_QUANTITY
FROM
    PIZZA_TYPES PT
        JOIN
    PIZZAS P ON PT.PIZZA_TYPE_ID = P.PIZZA_TYPE_ID
        JOIN
    ORDERS_DETAILS OD ON OD.PIZZA_ID = P.PIZZA_ID
GROUP BY PT.CATEGORY
ORDER BY TOTAL_QUANTITY DESC;






























